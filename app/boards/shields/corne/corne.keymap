/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV 1
#define SYM 2

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                 | SHIFT | LWR | ENT |   | SPC | RSE  | SHIFT |

                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp LALT
                  &kp LSHIFT &mo 1 &kp RET   &kp SPACE &mo 2 &kp RSHIFT 
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F12  |  DEL  | BKSP |
// | TAB  | F9   | F10  |  F11 |      | CAPS |   | LFT  | DWN  |  UP  | RGT   |       |      |
// | CTRL | UNDO |  CUT | COPY | PASTE| CAPSW|   |      | HOME |PGDOWN| PGUP  | END   |  ALT |
//                         | GUI |     | ENT |   | SPC |     | GUI |

                        bindings = <
   &kp ESC  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F12 &kp DEL &kp BSPC
   &kp TAB &kp F9 &kp F10 &kp F11 &trans  &kp CAPS   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LCTRL &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &caps_word &trans &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &kp LALT
                  &kp LGUI &trans &kp RET      &kp SPACE &trans &kp LGUI
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// | ~`  |  ! |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | "|"  |
// | TAB | 1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  _   |
// |LCTRL| =  |  -  |  +  |  [  |  {  |   |  }  |  ]  |  ,  |  .  |  \  | LALT |
                  | SHIFT |     | ENT |   | SPC |     | SHIFT |

                        bindings = <
   &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp PIPE
   &kp TAB &kp N1  &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp UNDER
   &kp LCTRL &kp KP_EQUAL &kp MINUS &kp PLUS &kp LBKT &kp LBRC &kp RBRC &kp RBKT  &kp COMMA &kp DOT &kp BSLA &kp LALT
                             &kp LSHIFT &trans   &kp SPACE   &kp RET   &trans    &kp RSHIFT
                        >;
                };
        };

        settings_layer {
// -----------------------------------------------------------------------------------------
// | ESC | BT1   | BT2   | BT3   |    |    |   |        |         |      |       |      |      |
// | TAB | RST   | BOOTL |       |    |    |   |        |         |      | LOCK  | BOOTL| RST  |
// |LCTRL|OUT_TOG|       |       |    |    |   |MIC MUTE|SOUND OFF|VOL DN|VOL UP |      | LALT |
                         | SHIFT |    |ENT |   | SPC    |         | SHIFT |

                        bindings = <
   &kp ESC &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL2 &trans &trans  &trans &trans  &trans &trans  &trans &trans
   &kp TAB &sys_reset &bootloader  &trans &trans &trans &trans &trans &trans &kp K_LOCK &bootloader &sys_reset
   &kp LCTRL &out OUT_TOG &trans &trans &trans &trans &kp LC(LS(M)) &kp C_MUTE  &kp C_VOL_DN &kp C_VOL_UP &trans &kp LALT
                             &kp LSHIFT &trans   &kp SPACE   &kp RET   &trans    &kp RSHIFT
                        >;
                };
        };


        conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <nav_layer sym_layer>;
            then-layer = <settings_layer>;
        };
    };
};
